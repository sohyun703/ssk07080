#함수로 더하기 나타내기

def hap(x,y):
  return x+y

#람다로 더하기 표현해주기

(lambda x,y: x+y)(10,20)

#map(함수, 리스트)

map(lambda x : x**2,range(5))
list(map(lambda x : x**2, range(5)))

list(filter(lambda x :x<5,range(10)))

numbers =  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
list(filter(lambda x : x%2 ==0,numbers))

def solution(logs):
  letters,digits = [],[]
  for log in logs :
    if log.split()[1].isdigit(): #log.split() log를 공백 기준으로 분할한 뒤 리스트의 1번째 것 선택
      digits.append(log)
    else :
      letters.append(log)
  
  letters = sorted(letters,key = lambda x : (x.split()[1:],x.split()[0]))
  return letters + digits

logs = ["dig1 8 1 5 1","let1 art can","dig2 3 6","let2 own kit dig","let3 art zero"]

solution(logs)


list = ['apple', 'banana', 'cherry', 'date', 'elderberry']
result_list = sorted(list,key = lambda x : (len(x),x))
print(result_list)

#높이를 입력 받아 비 온 후 얼마나 많은 물이 쌓일 수 있는지 계산하라

# [0,1,0,2,1,0,1,3,2,1,2,1]
def solution(height):
  if not height :
    return 0
  
  volume = 0
  left, right = 0, len(height)-1
  left_max, right_max = height[left],height[right] #일단 하나 정해두기

  while left<right:
    left_max , right_max= max(height[left],left_max),max(height[right],right_max)

    if left_max<=right_max:
      volume += left_max - height[left]
      left +=1
    else :
      volume += right_max - height[right]
      right-=1
  return volume
